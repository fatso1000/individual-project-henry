{"ast":null,"code":"var _jsxFileName = \"/home/fatso1000/Escritorio/CarpetaDeCodigo/Henry/Projects/IndividualProject/frontend/src/components/createvideogame/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGenres, addVideogame } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = e => {\n      if (e.keyCode === 13) {\n        this.handleSubmit();\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      releaseDate: \"\",\n      rating: \"\",\n      genres: [],\n      platforms: [],\n      petition: {\n        loading: false,\n        error: null\n      },\n      isSubmitted: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      petition: {\n        loading: true,\n        error: null\n      }\n    });\n    this.props.getGenres().then(() => {\n      this.setState({\n        petition: {\n          loading: false,\n          error: null\n        },\n        isSubmitted: true\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"SUBMIT\");\n    this.props.uploadVideogame({\n      name: this.state.name,\n      description: this.state.description,\n      releaseDate: this.state.releaseDate,\n      rating: this.state.rating,\n      genres: this.state.genres,\n      platform: this.state.platforms\n    });\n  }\n\n  genresList() {\n    if (!this.state.petition.loading) {\n      return this.props.genres.response.map((element, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: element.name,\n          children: element.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  }\n\n  addGenres(e) {\n    var newArray = this.state.genres;\n    var tmp = true;\n\n    for (var i = 0; i < newArray.length; i++) {\n      if (newArray[i] === e.target.value) {\n        newArray.splice(i, 1);\n        tmp = false;\n      }\n    }\n\n    if (tmp === true) {\n      this.setState({\n        genres: [...this.state.genres, e.target.value]\n      });\n      return;\n    } else {\n      this.setState({\n        genres: newArray\n      });\n    }\n  }\n\n  render() {\n    const {\n      name,\n      description,\n      releaseDate,\n      rating\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            autoComplete: \"off\",\n            value: name,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            autoComplete: \"off\",\n            value: description,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseDate\",\n            children: \"release date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"releaseDate\",\n            autoComplete: \"off\",\n            value: releaseDate,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rating\",\n            children: \"rating: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"rating\",\n            autoComplete: \"off\",\n            value: rating,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"genres\",\n            children: \"genres: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"genres\",\n            id: \"genres\",\n            multiple: true,\n            value: this.state.genres,\n            onChange: e => this.addGenres(e),\n            children: this.state.isSubmitted && this.genresList()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"genres\",\n            children: \"platforms: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"genres\",\n            id: \"genres\",\n            multiple: true,\n            value: this.state.platforms,\n            onChange: e => this.addGenres(e),\n            children: this.state.isSubmitted && this.genresList()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"SEARCH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    genres: state.genres\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getGenres: () => dispatch(getGenres()),\n    uploadVideogame: payload => dispatch(addVideogame(payload))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/fatso1000/Escritorio/CarpetaDeCodigo/Henry/Projects/IndividualProject/frontend/src/components/createvideogame/index.js"],"names":["React","Component","connect","getGenres","addVideogame","Home","constructor","props","handleKeyPress","e","keyCode","handleSubmit","state","name","description","releaseDate","rating","genres","platforms","petition","loading","error","isSubmitted","componentDidMount","setState","then","handleChange","event","title","target","value","preventDefault","console","log","uploadVideogame","platform","genresList","response","map","element","i","addGenres","newArray","tmp","length","splice","render","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGenres, addVideogame } from \"../../actions\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      releaseDate: \"\",\n      rating: \"\",\n      genres: [],\n      platforms: [],\n      petition: {\n        loading: false,\n        error: null,\n      },\n      isSubmitted: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      petition: {\n        loading: true,\n        error: null,\n      },\n    });\n    this.props.getGenres().then(() => {\n      this.setState({\n        petition: {\n          loading: false,\n          error: null,\n        },\n        isSubmitted: true,\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"SUBMIT\");\n    this.props.uploadVideogame({\n      name: this.state.name,\n      description: this.state.description,\n      releaseDate: this.state.releaseDate,\n      rating: this.state.rating,\n      genres: this.state.genres,\n      platform: this.state.platforms,\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      this.handleSubmit();\n    }\n  };\n\n  genresList() {\n    if (!this.state.petition.loading) {\n      return this.props.genres.response.map((element, i) => {\n        return (\n          <option key={i} value={element.name}>\n            {element.name}\n          </option>\n        );\n      });\n    }\n  }\n\n  addGenres(e) {\n    var newArray = this.state.genres;\n    var tmp = true;\n    for (var i = 0; i < newArray.length; i++) {\n      if (newArray[i] === e.target.value) {\n        newArray.splice(i, 1);\n        tmp = false;\n      }\n    }\n    if (tmp === true) {\n      this.setState({\n        genres: [...this.state.genres, e.target.value],\n      });\n      return;\n    } else {\n      this.setState({\n        genres: newArray,\n      });\n    }\n  }\n\n  render() {\n    const { name, description, releaseDate, rating } = this.state;\n    return (\n      <div>\n        <form onSubmit={(e) => this.handleSubmit(e)}>\n          <div>\n            <label htmlFor=\"name\">name: </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              autoComplete=\"off\"\n              value={name}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"description\">description: </label>\n            <input\n              type=\"text\"\n              id=\"description\"\n              autoComplete=\"off\"\n              value={description}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"releaseDate\">release date: </label>\n            <input\n              type=\"text\"\n              id=\"releaseDate\"\n              autoComplete=\"off\"\n              value={releaseDate}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"rating\">rating: </label>\n            <input\n              type=\"number\"\n              id=\"rating\"\n              autoComplete=\"off\"\n              value={rating}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"genres\">genres: </label>\n            <select\n              name=\"genres\"\n              id=\"genres\"\n              multiple={true}\n              value={this.state.genres}\n              onChange={(e) => this.addGenres(e)}\n            >\n              {this.state.isSubmitted && this.genresList()}\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"genres\">platforms: </label>\n            <select\n              name=\"genres\"\n              id=\"genres\"\n              multiple={true}\n              value={this.state.platforms}\n              onChange={(e) => this.addGenres(e)}\n            >\n              {this.state.isSubmitted && this.genresList()}\n            </select>\n          </div>\n          <button type=\"submit\">SEARCH</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    genres: state.genres,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getGenres: () => dispatch(getGenres()),\n    uploadVideogame: (payload) => dispatch(addVideogame(payload)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}