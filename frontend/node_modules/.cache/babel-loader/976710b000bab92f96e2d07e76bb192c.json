{"ast":null,"code":"var _jsxFileName = \"/home/fatso1000/Escritorio/CarpetaDeCodigo/Henry/Projects/IndividualProject/frontend/src/components/createvideogame/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGenres } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = e => {\n      if (e.keyCode === 13) {\n        this.handleSubmit();\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      releaseDate: \"\",\n      rating: \"\",\n      genres: [],\n      platforms: []\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      petition: {\n        loading: true,\n        error: null\n      }\n    });\n    this.props.getGenres().then(() => {\n      this.setState({\n        petition: {\n          loading: false,\n          error: null\n        },\n        isSubmitted: true\n      });\n    });\n  }\n\n  genresList() {}\n\n  render() {\n    const {\n      name,\n      description,\n      releaseDate,\n      rating\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            autoComplete: \"off\",\n            value: name,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            autoComplete: \"off\",\n            value: description,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseDate\",\n            children: \"release date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"releaseDate\",\n            autoComplete: \"off\",\n            value: releaseDate,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rating\",\n            children: \"rating: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"rating\",\n            autoComplete: \"off\",\n            value: rating,\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"genres\",\n            children: \"genres: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"genres\",\n            id: \"genres\",\n            children: this.genresList()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"SEARCH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    genres: state.genres\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getGenres: () => dispatch(getGenres())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/fatso1000/Escritorio/CarpetaDeCodigo/Henry/Projects/IndividualProject/frontend/src/components/createvideogame/index.js"],"names":["React","Component","connect","getGenres","Home","constructor","props","handleKeyPress","e","keyCode","handleSubmit","state","name","description","releaseDate","rating","genres","platforms","handleChange","event","setState","title","target","value","preventDefault","petition","loading","error","then","isSubmitted","genresList","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGenres } from \"../../actions\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      releaseDate: \"\",\n      rating: \"\",\n      genres: [],\n      platforms: [],\n    };\n  }\n\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      petition: {\n        loading: true,\n        error: null,\n      },\n    });\n    this.props.getGenres().then(() => {\n      this.setState({\n        petition: {\n          loading: false,\n          error: null,\n        },\n        isSubmitted: true,\n      });\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      this.handleSubmit();\n    }\n  };\n\n  genresList() {\n    \n  }\n\n  render() {\n    const { name, description, releaseDate, rating } = this.state;\n    return (\n      <div>\n        <form onSubmit={(e) => this.handleSubmit(e)}>\n          <div>\n            <label htmlFor=\"name\">name: </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              autoComplete=\"off\"\n              value={name}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"description\">description: </label>\n            <input\n              type=\"text\"\n              id=\"description\"\n              autoComplete=\"off\"\n              value={description}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"releaseDate\">release date: </label>\n            <input\n              type=\"text\"\n              id=\"releaseDate\"\n              autoComplete=\"off\"\n              value={releaseDate}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"rating\">rating: </label>\n            <input\n              type=\"number\"\n              id=\"rating\"\n              autoComplete=\"off\"\n              value={rating}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"genres\">genres: </label>\n            <select name=\"genres\" id=\"genres\">\n              {this.genresList()}\n            </select>\n          </div>\n          <button type=\"submit\">SEARCH</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    genres: state.genres,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getGenres: () => dispatch(getGenres()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}