{"ast":null,"code":"var _jsxFileName = \"/home/fatso1000/Escritorio/CarpetaDeCodigo/Henry/Projects/IndividualProject/frontend/src/components/detailgame/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { searchVideogame } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Maps = props => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(\"li\", {\n    children: props.game.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false);\n\n_c = Maps;\nexport class DetailGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      name\n    } = this.props.match.params;\n    this.props.getVideogame({\n      id: name\n    }).then(() => {\n      this.setState({\n        isLoaded: true\n      });\n      console.log(\"GAME LOADED\");\n    });\n  }\n\n  list(opt) {\n    if (opt === \"genres\") {\n      return this.props.detail.genres.map(game => {\n        return /*#__PURE__*/_jsxDEV(Maps, {\n          game: game\n        }, game.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      });\n    } else {\n      return this.props.detail.platforms.map(platform => {\n        // console.log(platform)\n        return /*#__PURE__*/_jsxDEV(Maps, {\n          game: platform\n        }, platform.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.isLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name: \", this.props.detail.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Description: \", this.props.detail.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", this.props.detail.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release date: \", this.props.detail.releaseDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.detail.image,\n          alt: \"ni idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Genres List:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: this.list(\"genres\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Platforms List:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: this.list()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), \"image nombre genres description rating releasedate platforms\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    detail: state.videogames\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getVideogame: name => dispatch(searchVideogame(name))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailGame);\n\nvar _c;\n\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"sources":["/home/fatso1000/Escritorio/CarpetaDeCodigo/Henry/Projects/IndividualProject/frontend/src/components/detailgame/index.js"],"names":["React","Component","connect","searchVideogame","Maps","props","game","name","DetailGame","constructor","state","isLoaded","componentDidMount","match","params","getVideogame","id","then","setState","console","log","list","opt","detail","genres","map","platforms","platform","render","description","rating","releaseDate","image","mapStateToProps","videogames","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,eAAhC;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,iBACX;AAAA,yBACE;AAAA,cAAKA,KAAK,CAACC,IAAN,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,iBADF;;KAAMH,I;AAMN,OAAO,MAAMI,UAAN,SAAyBP,SAAzB,CAAmC;AACxCQ,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKK,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEL,MAAAA;AAAF,QAAW,KAAKF,KAAL,CAAWQ,KAAX,CAAiBC,MAAlC;AACA,SAAKT,KAAL,CAAWU,YAAX,CAAwB;AAAEC,MAAAA,EAAE,EAAET;AAAN,KAAxB,EAAsCU,IAAtC,CAA2C,MAAM;AAC/C,WAAKC,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KAHD;AAID;;AAEDC,EAAAA,IAAI,CAACC,GAAD,EAAM;AACR,QAAIA,GAAG,KAAK,QAAZ,EAAsB;AACpB,aAAO,KAAKjB,KAAL,CAAWkB,MAAX,CAAkBC,MAAlB,CAAyBC,GAAzB,CAA8BnB,IAAD,IAAU;AAC5C,4BAAO,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ,WAAuBA,IAAI,CAACU,EAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,CAAP;AAGD,KAJD,MAIO;AACL,aAAO,KAAKX,KAAL,CAAWkB,MAAX,CAAkBG,SAAlB,CAA4BD,GAA5B,CAAiCE,QAAD,IAAc;AACnD;AACA,4BAAO,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ,WAA2BA,QAAQ,CAACX,EAApC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAHM,CAAP;AAID;AACF;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKlB,KAAL,CAAWC,QAAX,iBACC;AAAA,gCACE;AAAA,+BAAW,KAAKN,KAAL,CAAWkB,MAAX,CAAkBhB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,sCAAkB,KAAKF,KAAL,CAAWkB,MAAX,CAAkBM,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,iCAAY,KAAKxB,KAAL,CAAWkB,MAAX,CAAkBO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,uCAAkB,KAAKzB,KAAL,CAAWkB,MAAX,CAAkBQ,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAK,UAAA,GAAG,EAAE,KAAK1B,KAAL,CAAWkB,MAAX,CAAkBS,KAA5B;AAAmC,UAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAK,KAAKX,IAAL,CAAU,QAAV;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAUE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAK,KAAKA,IAAL;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AApDuC;;AAuD1C,SAASY,eAAT,CAAyBvB,KAAzB,EAAgC;AAC9B,SAAO;AACLa,IAAAA,MAAM,EAAEb,KAAK,CAACwB;AADT,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLrB,IAAAA,YAAY,EAAGR,IAAD,IAAU6B,QAAQ,CAACjC,eAAe,CAACI,IAAD,CAAhB;AAD3B,GAAP;AAGD;;AAED,eAAeL,OAAO,CAAC+B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3B,UAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { searchVideogame } from \"../../actions\";\n\nconst Maps = (props) => (\n  <>\n    <li>{props.game.name}</li>\n  </>\n);\n\nexport class DetailGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n    };\n  }\n\n  componentDidMount() {\n    const { name } = this.props.match.params;\n    this.props.getVideogame({ id: name }).then(() => {\n      this.setState({ isLoaded: true });\n      console.log(\"GAME LOADED\");\n    });\n  }\n\n  list(opt) {\n    if (opt === \"genres\") {\n      return this.props.detail.genres.map((game) => {\n        return <Maps game={game} key={game.id} />;\n      });\n    } else {\n      return this.props.detail.platforms.map((platform) => {\n        // console.log(platform)\n        return <Maps game={platform} key={platform.id} />;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.isLoaded && (\n          <>\n            <h1>Name: {this.props.detail.name}</h1>\n            <h3>Description: {this.props.detail.description}</h3>\n            <p>Rating: {this.props.detail.rating}</p>\n            <p>Release date: {this.props.detail.releaseDate}</p>\n            <img src={this.props.detail.image} alt=\"ni idea\" />\n            <div>\n              <p>Genres List:</p>\n              <ol>{this.list(\"genres\")}</ol>\n            </div>\n            <div>\n              <p>Platforms List:</p>\n              <ol>{this.list()}</ol>\n            </div>\n          </>\n        )}\n        image nombre genres description rating releasedate platforms\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    detail: state.videogames,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getVideogame: (name) => dispatch(searchVideogame(name)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailGame);\n"]},"metadata":{},"sourceType":"module"}